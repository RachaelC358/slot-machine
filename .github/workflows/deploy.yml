name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  configure-aws:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Debug
        run: env | grep AWS

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-and-tag:
    runs-on: ubuntu-latest
    needs: configure-aws  # Ensures this job runs after the AWS configuration job
    environment: prod
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        run: |
          docker build -t slot-machine .
          docker tag slot-machine:latest 307946634710.dkr.ecr.us-east-1.amazonaws.com/slot-machine:latest

  push-to-ecr:
    runs-on: ubuntu-latest
    needs: build-and-tag  # Ensures this job runs after building and tagging
    environment: prod
    steps:
      - name: Push Docker image to ECR
        run: |
          docker push 307946634710.dkr.ecr.us-east-1.amazonaws.com/slot-machine:latest

  register-ecs-task:
    runs-on: ubuntu-latest
    needs: push-to-ecr  # Ensures this job runs after pushing to ECR
    environment: prod
    steps:
      - name: Register ECS task definition revision
        id: register_task_definition
        run: |
          # Update the ECS task definition with the new image tag
          sed -i 's|"image": ".*"|"image": "307946634710.dkr.ecr.us-east-1.amazonaws.com/slot-machine:latest"|' ecs-task-definition.json
          # Register the ECS task definition and capture the revision number
          output=$(aws ecs register-task-definition --cli-input-json file://ecs-task-definition.json)
          echo "Task definition registered with revision number: $(echo $output | jq -r '.taskDefinition.revision')"
          echo "::set-output name=revision::$(echo $output | jq -r '.taskDefinition.revision')"

  update-ecs-service:
    runs-on: ubuntu-latest
    needs: register-ecs-task  # Ensures this job runs after registering the ECS task
    environment: prod
    steps:
      - name: Update ECS service to use new task definition
        run: |
          # Use the revision number from the previous step
          revision_number=${{ steps.register_task_definition.outputs.revision }}
          aws ecs update-service --cluster slot-machine-cluster --service slot-machine-service --task-definition slot-machine-task:$revision_number
